version: 2.1
jobs:
  run_test:
    docker:
      - image: circleci/python:3.7.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: "Install Python Dependencies 1"
          command: echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV && source $BASH_ENV
      - run:
          name: "Install Python Dependencies 2"
          command: pip install --user -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: "Run Linter"
          working_directory: ~/repo
          command: |
            mkdir -p test-reports/flake8
            flake8 . --output-file=test-reports/flake8/flake8.txt
      #- run:
          #name: "Check for warnings."
          #command: |
            #if [ -f .flake8warnings ]; then
              #flake8 --append-config=.flake8warnings
            #else
              #flake8 --extend-ignore="$FLAKE8_ERRORS"
            #fi
          #when: always
      #- run:
          #name: Check for errors.
          #command: |
            #if [ -f .flake8errors ]; then
              #flake8 --append-config=.flake8errors
            #lse
              #flake8 --extend-ignore="$FLAKE8_WARNINGS"
            #fi
          #when: always

      - run:
          name: "Run tests"
          command: |
            flake8 --exclude=venv* --statistics
            flake8 . --bug-report
            flake8 . --benchmark
            flake8 . --count
          when: always
      - run:
          name: "Create Flake8 Reports"
          working_directory: ~/repo
          command: flake8_junit test-reports/flake8/flake8.txt test-reports/flake8/flake8_junit.xml
          when: always
      - run:
          name: "Create PYTest Reports"
          command: |
              mkdir test-results/pytest
              pytest --cov --junitxml=test-reports/pytest/pytest_junit.xml --html=test-reports/pytest/pytest_report.html --self-contained-html
          when: always
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
workflows:
  version: 2.1
  build-tests:
    jobs:
      - run_test
